@import "de.variables.scss";
@import "de.classes.scss";

.hellofresh {
  display: block;
  position: relative;
  margin: 0;
  border: 0;
  padding: 0;
  outline: none;
  transition: all 0.1s linear;
  overflow: hidden;

  @extend .rounded;

  // if the button has the attribute disabled
  &[disabled] {
    background: rgba(255, 255, 255, 0.28) !important;
    color: var(--colour-dark) !important;
  }

  // if the button is not diabled
  &:not(:disabled) {
    cursor: pointer;
  }

  // hover and focus mode
  &:hover,
  &:focus {
    outline: 0;
    text-decoration: none;
  }

  &:focus {
    outline: 4px solid var(--colour-blue-200);
  }

  &.rounded {
    @extend .rd10;
  }

  // ----------
  // a totally round button (just with an icon ofc)
  // ---------------
  &.circled {
    border-radius: 50%;

    &.small {
      height: 2em;
      width: 2em;
    }

    &.clean {
      background: #ffe9d83b;
    }
  }

  &.icon-only {
    width: 3em;
    height: 3em;
    padding: 0;
    text-align: center;

    i {
      line-height: 2em;
    }
  }

  // ----------
  // light or dark modes of the buttons
  // ---------------
  &.light {
    color: var(--colour-dark);
  }

  &.dark {
    color: var(--colour-light);
  }

  // ----------
  // shadow behaviour
  // ---------------
  &.shadowed {
    @extend .mshd-1;
  }

  &.shadowed,
  &.hover-shadow {
    &:hover {
      @extend .mshd-2;
    }

    &:active {
      @extend .mshd-1;
    }
  }

  &.text-shadowed {
    text-shadow: 0 1px 1.6px rgba(0, 0, 0, 0.42);
  }

  &.text-shadowed-blured {
    text-shadow: 0 1px 6px rgba(0, 0, 0, 0.24);
  }

  // ----------
  // sizes
  // ---------------
  &.big {
    padding: 0 1.4em;
    line-height: 2.6em;
    font-weight: 500;
    letter-spacing: 0.1;
  }

  &.small {
    padding: 0 12px;
    line-height: 1.4em;
    font-size: 1em;
  }

  &.wholebottom {
    position: relative;
    line-height: 2.8em;
    text-align: center;
    font-size: 1em;
    width: 100%;
    text-shadow: 0 2px 1px rgba(100, 108, 114, 0.42);
    outline: none;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      height: 100%;
      width: 100%;
      background-color: rgba(0, 0, 0, 0);
      transition: all 0.1s linear;
    }

    &:hover {
      &::before {
        background-color: rgba(0, 0, 0, 0.12);
        outline: none;
      }
    }

    &:active {
      &::before {
        background-color: rgba(0, 0, 0, 0.24);
        outline: none;
      }
    }
  }

  //

  &.white {
    background-color: white;
  }

  &.green {
    background-color: var(--colour-green);
    color: white;
  }

  &.pink {
    background-color: var(--colour-pink);
    color: white;
  }

  &.red {
    background-color: var(--colour-red);
    color: white;
  }

  &.darkred {
    background-color: var(--colour-darkred);
    color: white;
  }

  &.blue {
    background-color: var(--colour-blue);
    color: white;
  }

  &.lila {
    background-color: var(--colour-lila);
    color: white;
  }

  &.grey {
    background-color: var(--colour-grey);
    color: white;
  }

  &.orange {
    background-color: var(--colour-orange);
    color: white;
  }
}

.notifier {
  bottom: -28em;
  right: 1em;
  background: var(--colour-dark);
  position: fixed;
  z-index: 100;
  max-width: 380px;
  animation: notifierSlideIn 0.4s cubic-bezier(0.1, 0.82, 0.25, 1) forwards;

  .inr {
    padding: 1.2em 1.8em;
    color: white;

    .controller {
      margin-bottom: 0.2em;
      font-weight: 700;

      p {
        float: left;
        line-height: 1.6em;
        margin-right: 0.4em;
      }

      i {
        &:before {
          content: "store";
          display: block;
          float: left;
        }

        &.store {
          &:before {
            content: "store";
          }
        }

        &.products {
          &:before {
            content: "qr_code";
          }
        }

        &.users {
          &:before {
            content: "people_alt";
          }
        }

        &.sessions {
          &:before {
            content: "sip";
          }
        }
      }

      &:after {
        display: block;
        content: "";
        clear: both;
        margin: 0;
        padding: 0;
        height: 0px;
      }
    }
  }

  @extend .mshd-2, .rd10;
}

@keyframes notifierSlideIn {
  from {
    bottom: -28em;
  }

  to {
    bottom: 1em;
  }
}

.locale select {
  margin-top: 8px;
  padding: 6px 18px;
  margin-right: 32px;
  background: #fff;
  border: 1px solid rgba(0, 0, 0, 0.12);
  cursor: pointer;
  color: #333;

  @extend .rd24;
}

.depot_form {
  padding: 0 1em;
  h1 {
    font-size: 1.99em;
    line-height: 1.41em;
    margin-bottom: 0.5em;
    padding: 0;
  }

  .field,
  .actions {
    margin-bottom: 1em;
    padding: 0;
    margin-top: 24px;
  }

  .actions {
    text-align: right;
    padding: 1em 0;
  }

  input,
  textarea,
  select,
  option {
    border: none;
    outline: none;
    box-sizing: border-box;
    font-size: 1em;
    padding: 0 32px;
    line-height: 3em;
    width: 100%;

    background: white;

    @extend .rd6, .mshd-1, .tran-all;

    &:focus {
      outline: 4px solid var(--colour-blue-200);
    }
  }

  textarea,
  select {
    padding-top: 18px;
    padding-bottom: 18px;
    line-height: 1em;
  }

  textarea {
    resize: none;
  }

  select {
    cursor: pointer;
  }

  label {
    padding: 0.5em 0;
  }

  input[type="submit"] {
    @extend .hellofresh, .big, .green, .rd6, .hover-shadow;
  }

  .field_with_errors {
    background: none;
    color: red;
    width: 100%;
    label {
      font-weight: bold;
    }

    label::before {
      content: "ðŸ”¥ ";
    }

    input,
    textarea {
      background: pink;
    }
  }
}

.borderBox {
  border: 1px solid rgba(0, 0, 0, 0.12);

  &.padded {
    padding: 1.4em;
  }
}
